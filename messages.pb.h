/* Automatically generated nanopb header */
/* Generated by nanopb-0.2.4 at Wed Jan 29 21:47:27 2014. */

#ifndef _PB_MESSAGES_PB_H_
#define _PB_MESSAGES_PB_H_
#include "pb.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _SensorData {
    int32_t id;
    bool has_binding;
    bool binding;
    bool has_temperature;
    float temperature;
    bool has_battery_level;
    int32_t battery_level;
    bool has_pressure;
    float pressure;
    bool has_humidity;
    float humidity;
    bool has_type;
    int32_t type;
} SensorData;

/* Default values for struct fields */

/* Field tags (for use in manual encoding/decoding) */
#define SensorData_id_tag                        1
#define SensorData_binding_tag                   2
#define SensorData_temperature_tag               3
#define SensorData_battery_level_tag             4
#define SensorData_pressure_tag                  5
#define SensorData_humidity_tag                  6
#define SensorData_type_tag                      7

/* Struct field encoding specification for nanopb */
extern const pb_field_t SensorData_fields[8];

/* Maximum encoded size of messages (where known) */
#define SensorData_size                          35

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
